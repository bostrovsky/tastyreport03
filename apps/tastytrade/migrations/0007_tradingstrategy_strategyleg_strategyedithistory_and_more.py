# Generated by Django 5.2.1 on 2025-05-30 15:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tastytrade', '0006_useraccountpreferences_discoveredaccount'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=32)),
                ('strategy_type', models.CharField(choices=[('long_stock', 'Long Stock'), ('short_stock', 'Short Stock'), ('long_call', 'Long Call'), ('short_call', 'Short Call'), ('long_put', 'Long Put'), ('short_put', 'Short Put'), ('covered_call', 'Covered Call'), ('cash_secured_put', 'Cash Secured Put'), ('protective_put', 'Protective Put'), ('bull_call_spread', 'Bull Call Spread'), ('bear_call_spread', 'Bear Call Spread'), ('bull_put_spread', 'Bull Put Spread'), ('bear_put_spread', 'Bear Put Spread'), ('long_straddle', 'Long Straddle'), ('short_straddle', 'Short Straddle'), ('long_strangle', 'Long Strangle'), ('short_strangle', 'Short Strangle'), ('iron_condor', 'Iron Condor'), ('iron_butterfly', 'Iron Butterfly'), ('calendar_spread', 'Calendar Spread'), ('diagonal_spread', 'Diagonal Spread'), ('collar', 'Collar'), ('jade_lizard', 'Jade Lizard'), ('big_lizard', 'Big Lizard'), ('broken_wing_butterfly', 'Broken Wing Butterfly'), ('custom', 'Custom Strategy'), ('unassigned', 'Unassigned Transactions')], max_length=32)),
                ('underlying_symbol', models.CharField(max_length=64)),
                ('custom_name', models.CharField(blank=True, help_text='User-defined name for custom strategies', max_length=128)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('partially_closed', 'Partially Closed'), ('expired', 'Expired'), ('assigned', 'Assigned')], default='open', max_length=20)),
                ('is_system_inferred', models.BooleanField(default=True, help_text='True if auto-detected, False if user-created')),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='System confidence in strategy identification (0-100)', max_digits=5, null=True)),
                ('max_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('max_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('breakeven_points', models.JSONField(default=list, help_text='List of breakeven prices')),
                ('opened_date', models.DateTimeField()),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list, help_text='User-defined tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('credential', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tastytrade.tastytradecredential')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-opened_date'],
            },
        ),
        migrations.CreateModel(
            name='StrategyLeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=64)),
                ('asset_type', models.CharField(max_length=16)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=20)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('strike', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('option_type', models.CharField(blank=True, choices=[('call', 'Call'), ('put', 'Put')], max_length=4, null=True)),
                ('average_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legs', to='tastytrade.tradingstrategy')),
            ],
            options={
                'ordering': ['strike', 'expiry'],
            },
        ),
        migrations.CreateModel(
            name='StrategyEditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create Strategy'), ('update', 'Update Strategy'), ('delete', 'Delete Strategy'), ('merge', 'Merge Strategies'), ('split', 'Split Strategy'), ('reassign_transaction', 'Reassign Transaction'), ('add_transaction', 'Add Transaction'), ('remove_transaction', 'Remove Transaction')], max_length=32)),
                ('previous_state', models.JSONField(help_text='Previous state data for undo')),
                ('new_state', models.JSONField(help_text='New state data for redo')),
                ('reason', models.CharField(blank=True, max_length=256)),
                ('affected_transactions', models.JSONField(default=list, help_text='List of transaction IDs affected')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edit_history', to='tastytrade.tradingstrategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='strategy',
            field=models.ForeignKey(blank=True, help_text='Associated trading strategy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='tastytrade.tradingstrategy'),
        ),
        migrations.AddIndex(
            model_name='tradingstrategy',
            index=models.Index(fields=['user', 'account_number', 'underlying_symbol'], name='tastytrade__user_id_8c042c_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingstrategy',
            index=models.Index(fields=['strategy_type', 'status'], name='tastytrade__strateg_1733ca_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingstrategy',
            index=models.Index(fields=['opened_date'], name='tastytrade__opened__4768f2_idx'),
        ),
    ]
